[{"fullname": "tentohako", "modulename": "tentohako", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent", "modulename": "tentohako.agent", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.base", "modulename": "tentohako.agent.base", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.base.BaseAgent", "modulename": "tentohako.agent.base", "qualname": "BaseAgent", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.base.BaseAgent.__init__", "modulename": "tentohako.agent.base", "qualname": "BaseAgent.__init__", "type": "function", "doc": "<p>Abstract class which represents the agent.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  the name of the agent</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name:</strong>  the name of the agent</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, {"fullname": "tentohako.agent.base.BaseAgent.set_player_id", "modulename": "tentohako.agent.base", "qualname": "BaseAgent.set_player_id", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "player_id"], "funcdef": "def"}, {"fullname": "tentohako.agent.base.BaseAgent.step", "modulename": "tentohako.agent.base", "qualname": "BaseAgent.step", "type": "function", "doc": "<p>Return the action based on the given board.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the instance of Board class which represents\nthe current board state.</li>\n<li><strong>id_to_scores:</strong>  dictionary whose keys are user id and values\nare scores.</li>\n</ul>\n", "parameters": ["self", "board", "id_to_scores"], "funcdef": "def"}, {"fullname": "tentohako.agent.base.BaseAgent.get_valid_action", "modulename": "tentohako.agent.base", "qualname": "BaseAgent.get_valid_action", "type": "function", "doc": "<p>Return a list of possible actions based on the given board.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the instance of Board class which represents\nthe current board state.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>valid_actions: a list of possible actions</p>\n</blockquote>\n", "parameters": ["self", "board"], "funcdef": "def"}, {"fullname": "tentohako.agent.mixmax", "modulename": "tentohako.agent.mixmax", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.mixmax.MinMaxAgent", "modulename": "tentohako.agent.mixmax", "qualname": "MinMaxAgent", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.mixmax.MinMaxAgent.__init__", "modulename": "tentohako.agent.mixmax", "qualname": "MinMaxAgent.__init__", "type": "function", "doc": "<p>An agents which uses minmax algorithm for search</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  the name of the agent</li>\n<li><strong>depth:</strong>  number of recursion</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name:</strong>  the name of the agent</li>\n<li><strong>depth:</strong>  number of recursion</li>\n</ul>\n", "parameters": ["self", "name", "depth"], "funcdef": "def"}, {"fullname": "tentohako.agent.mixmax.MinMaxAgent.minmax", "modulename": "tentohako.agent.mixmax", "qualname": "MinMaxAgent.minmax", "type": "function", "doc": "<p>Search the best action with minmax algorithm</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the object of Board class which represents\nthe current status</li>\n<li><strong>player_id:</strong>  id of this agent</li>\n<li><strong>id_to_scores:</strong>  dictionary whose keies are the user id and the\nvalues are scores</li>\n<li><strong>depth:</strong>  number of recursion</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>best: score of the given board</p>\n</blockquote>\n", "parameters": ["self", "board", "player_id", "id_to_scores", "depth"], "funcdef": "def"}, {"fullname": "tentohako.agent.mixmax.MinMaxAgent.step", "modulename": "tentohako.agent.mixmax", "qualname": "MinMaxAgent.step", "type": "function", "doc": "<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the instance of Board class which represents\nthe current board state.</li>\n<li><strong>id_to_scores:</strong>  dictionary whose keies are the user id and the\nvalues are scores</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>picked_action:</p>\n</blockquote>\n", "parameters": ["self", "board", "id_to_scores"], "funcdef": "def"}, {"fullname": "tentohako.agent.random", "modulename": "tentohako.agent.random", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.random.RandomAgent", "modulename": "tentohako.agent.random", "qualname": "RandomAgent", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.random.RandomAgent.__init__", "modulename": "tentohako.agent.random", "qualname": "RandomAgent.__init__", "type": "function", "doc": "<p>An agents which randomly returns an action</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  the name of the agent</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name:</strong>  the name of the agent</li>\n</ul>\n", "parameters": ["self", "name"], "funcdef": "def"}, {"fullname": "tentohako.agent.random.RandomAgent.step", "modulename": "tentohako.agent.random", "qualname": "RandomAgent.step", "type": "function", "doc": "<p>Randomly return the action based on the given board.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the instance of Board class which represents\nthe current board state.</li>\n<li><strong>id_to_scores:</strong>  dictionary whose keies are the user id and the\nvalues are scores</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>picked_action: randomly chosen action</p>\n</blockquote>\n", "parameters": ["self", "board", "id_to_scores"], "funcdef": "def"}, {"fullname": "tentohako.agent.uct", "modulename": "tentohako.agent.uct", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.uct.UCTNode", "modulename": "tentohako.agent.uct", "qualname": "UCTNode", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.uct.UCTNode.__init__", "modulename": "tentohako.agent.uct", "qualname": "UCTNode.__init__", "type": "function", "doc": "<p>Basic class which represents a node which stores the trajectory of the game.\n   This class is mainly used for tree search algorithm.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>parentNode:</strong>  a node which represents the previous state</li>\n<li><strong>board:</strong>  current board</li>\n<li><strong>action:</strong>  an action which made the current board from the\nprevious state</li>\n<li><strong>activePlayer:</strong>  a current active player</li>\n<li><strong>id_to_scores:</strong>  current score status</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>parentNode:</strong>  a node which represents the previous state</li>\n<li><strong>board:</strong>  current board</li>\n<li><strong>action:</strong>  an action which made the current board from the\nprevious state</li>\n<li><strong>activePlayer:</strong>  a current active player</li>\n<li><strong>id_to_scores:</strong>  current score status</li>\n<li><strong>children:</strong>  list of the child nodes</li>\n<li><strong>wins:</strong>  number of wins from this node</li>\n<li><strong>visits:</strong>  number of trials from this node</li>\n<li><strong>unexamined:</strong>  valid action from the current node</li>\n</ul>\n", "parameters": ["self", "parentNode", "board", "action", "activePlayer", "id_to_scores", "cpuct"], "funcdef": "def"}, {"fullname": "tentohako.agent.uct.UCTNode.addChild", "modulename": "tentohako.agent.uct", "qualname": "UCTNode.addChild", "type": "function", "doc": "<p>Add a child node to this node.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the instance of the Board class which represents the next\nstatus from the current node</li>\n<li><strong>index:</strong>  index of the valid action</li>\n<li><strong>id_to_scores:</strong>  score status of the child node</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>node: the child node</p>\n</blockquote>\n", "parameters": ["self", "board", "index", "id_to_scores"], "funcdef": "def"}, {"fullname": "tentohako.agent.uct.UCTNode.selectChild", "modulename": "tentohako.agent.uct", "qualname": "UCTNode.selectChild", "type": "function", "doc": "<p>Select the child node for searching</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "tentohako.agent.uct.UCTAgent", "modulename": "tentohako.agent.uct", "qualname": "UCTAgent", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.agent.uct.UCTAgent.__init__", "modulename": "tentohako.agent.uct", "qualname": "UCTAgent.__init__", "type": "function", "doc": "<p>An Agent which uses UCT (monte-calro tree search with upper bound)</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>name:</strong>  the name of the agent</li>\n<li><strong>maxiterations:</strong>  the maximum number of iterations for searcing</li>\n<li><strong>blocksize:</strong>  block size for searcing</li>\n<li><strong>timelimit:</strong>  time-limit (s)</li>\n<li><strong>cpuct:</strong>  weight (parameter of UCT)</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name:</strong>  the name of the agent</li>\n<li><strong>maxiterations:</strong>  the maximum number of iterations for searcing</li>\n<li><strong>blocksize:</strong>  block size for searcing</li>\n<li><strong>timelimit:</strong>  time-limit (s)</li>\n<li><strong>cpuct:</strong>  weight</li>\n</ul>\n", "parameters": ["self", "name", "maxiterations", "blocksize", "timelimit", "cpuct"], "funcdef": "def"}, {"fullname": "tentohako.agent.uct.UCTAgent.step", "modulename": "tentohako.agent.uct", "qualname": "UCTAgent.step", "type": "function", "doc": "<p>Return the action based on the given board.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the instance of Board class which represents\nthe current board state.</li>\n<li><strong>id_to_scores:</strong>  dictionary whose keys are user id and values\nare scores.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>picked_action: picked action</p>\n</blockquote>\n", "parameters": ["self", "board", "id_to_scores"], "funcdef": "def"}, {"fullname": "tentohako.game", "modulename": "tentohako.game", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.game.board", "modulename": "tentohako.game.board", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.game.board.Board", "modulename": "tentohako.game.board", "qualname": "Board", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.game.board.Board.__init__", "modulename": "tentohako.game.board", "qualname": "Board.__init__", "type": "function", "doc": "<p>Class represents the board of the dots and boxes</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board_matrix:</strong>  list which represents the current state of the board</li>\n<li><strong>ncol:</strong>  number of the columns of the board</li>\n<li><strong>nrow:</strong>  number of the row of the board</li>\n<li><strong>score_min:</strong>  the minimum score of the cell</li>\n<li><strong>score_max:</strong>  the mamimum score of the cell</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>board_matrix:</strong>  list which represents the current state of the board</li>\n<li><strong>ncol:</strong>  number of the columns of the board</li>\n<li><strong>nrow:</strong>  number of the row of the board</li>\n<li><strong>score_min:</strong>  the minimum score of the cell</li>\n<li><strong>score_max:</strong>  the mamimum score of the cell</li>\n<li><strong>dim_x:</strong>  the x element of the dimension of the board_matrix\n(equal to ncol*2 + 1)</li>\n<li><strong>dim_y:</strong>  the y element of the dimension of the board_matrix\n(equal to nrow*2 + 1)</li>\n</ul>\n", "parameters": ["self", "board_matrix", "ncol", "nrow", "score_min", "score_max"], "funcdef": "def"}, {"fullname": "tentohako.game.board.Board.initialize", "modulename": "tentohako.game.board", "qualname": "Board.initialize", "type": "function", "doc": "<p>Initialize the board matrix.\nEach cell is filled randomly with a number between\nscore_min and score_max.</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "tentohako.game.board.Board.next_state", "modulename": "tentohako.game.board", "qualname": "Board.next_state", "type": "function", "doc": "<p>Make next state and culculate the score based on the given action.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>j:</strong>  y element of the picked action.</li>\n<li><strong>i:</strong>  x element of the picked action.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>next_board: the instance of Board class\n              which represents the next state.\n  score: score the agent got with the picked action.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError:</strong>  if the action is not valid</li>\n</ul>\n", "parameters": ["self", "j", "i"], "funcdef": "def"}, {"fullname": "tentohako.game.board.Board.is_done", "modulename": "tentohako.game.board", "qualname": "Board.is_done", "type": "function", "doc": "<p>Judge whether the state meets the enc condition.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>bool: True if the game is over.</p>\n</blockquote>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "tentohako.game.board.Board.board_to_string", "modulename": "tentohako.game.board", "qualname": "Board.board_to_string", "type": "function", "doc": "<p>Convert the board matrix to string to print our.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>boardstring: the string representataion of the board matrix.</p>\n</blockquote>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "tentohako.game.node", "modulename": "tentohako.game.node", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.game.node.get_valid_action_with_basic_rule", "modulename": "tentohako.game.node", "qualname": "get_valid_action_with_basic_rule", "type": "function", "doc": "<p>Return a list of possible actions based on the given board.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the instance of Board class which represents\nthe current board state.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>valid_actions: a list of possible actions</p>\n</blockquote>\n", "parameters": ["board"], "funcdef": "def"}, {"fullname": "tentohako.game.node.Node", "modulename": "tentohako.game.node", "qualname": "Node", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.game.node.Node.__init__", "modulename": "tentohako.game.node", "qualname": "Node.__init__", "type": "function", "doc": "<p>Basic class which represents a node which stores the trajectory of the game.\n   This class is mainly used for tree search algorithm.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>parentNode:</strong>  a node which represents the previous state</li>\n<li><strong>board:</strong>  current board</li>\n<li><strong>action:</strong>  an action which made the current board from the\nprevious state</li>\n<li><strong>activePlayer:</strong>  a current active player</li>\n<li><strong>id_to_scores:</strong>  current score status</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>parentNode:</strong>  a node which represents the previous state</li>\n<li><strong>board:</strong>  current board</li>\n<li><strong>action:</strong>  an action which made the current board from the\nprevious state</li>\n<li><strong>activePlayer:</strong>  a current active player</li>\n<li><strong>id_to_scores:</strong>  current score status</li>\n<li><strong>children:</strong>  list of the child nodes</li>\n<li><strong>wins:</strong>  number of wins from this node</li>\n<li><strong>visits:</strong>  number of trials from this node</li>\n<li><strong>unexamined:</strong>  valid action from the current node</li>\n</ul>\n", "parameters": ["self", "parentNode", "board", "action", "activePlayer", "id_to_scores"], "funcdef": "def"}, {"fullname": "tentohako.game.node.Node.addChild", "modulename": "tentohako.game.node", "qualname": "Node.addChild", "type": "function", "doc": "<p>Add a child node to this node.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the instance of the Board class which represents the next\nstatus from the current node</li>\n<li><strong>index:</strong>  index of the valid action</li>\n<li><strong>id_to_scores:</strong>  score status of the child node</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>node: the child node</p>\n</blockquote>\n", "parameters": ["self", "board", "index", "id_to_scores"], "funcdef": "def"}, {"fullname": "tentohako.game.node.Node.selectChild", "modulename": "tentohako.game.node", "qualname": "Node.selectChild", "type": "function", "doc": "<p>Select the child node for searching</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "tentohako.game.node.Node.update", "modulename": "tentohako.game.node", "qualname": "Node.update", "type": "function", "doc": "<p>Update the visit history of this node.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>result:</strong>  result of the game from this node.</li>\n<li><strong>player_id:</strong>  id of the player (basically equal to the activePlayer)</li>\n</ul>\n", "parameters": ["self", "result", "player_id"], "funcdef": "def"}, {"fullname": "tentohako.game.node.Node.mostVisitedChild", "modulename": "tentohako.game.node", "qualname": "Node.mostVisitedChild", "type": "function", "doc": "<p>Return most visited child node.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>mostVisited: most visited child node.</p>\n</blockquote>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "tentohako.game.viewer", "modulename": "tentohako.game.viewer", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.game.viewer.Viewer", "modulename": "tentohako.game.viewer", "qualname": "Viewer", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.game.viewer.Viewer.__init__", "modulename": "tentohako.game.viewer", "qualname": "Viewer.__init__", "type": "function", "doc": "<p>Class for visualizing the board</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>board:</strong>  the target board class</li>\n<li><strong>height:</strong>  height of the plotted figure</li>\n<li><strong>width:</strong>  width of the plotted figure</li>\n<li><strong>tmp_dir:</strong>  temporary directory which will be created to\nstore the intermidiate figures</li>\n<li><strong>id_to_color:</strong>  the color of each player</li>\n<li><strong>text_fontsize:</strong>  the font-size of the plotted text</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>fig:</strong>  matplotlib figure which will be used for plotting</li>\n<li><strong>board:</strong>  the target board class</li>\n<li><strong>tmp_dir:</strong>  temporary directory which will be created to\nstore the intermidiate figures</li>\n<li><strong>id_to_color:</strong>  the color of each player</li>\n<li><strong>text_fontsize:</strong>  the font-size of the plotted text</li>\n<li><strong>dots:</strong>  the index of the dots of the board</li>\n<li><strong>xs:</strong>  the x element of the dots within the coordinates of the board</li>\n<li><strong>ys:</strong>  the x element of the dots within the coordinates of the board</li>\n<li><strong>im_log:</strong>  list of the path to the intermidiate figures</li>\n</ul>\n", "parameters": ["self", "board", "height", "width", "tmp_dir", "id_to_color", "text_fontsize"], "funcdef": "def"}, {"fullname": "tentohako.game.viewer.Viewer.update_board", "modulename": "tentohako.game.viewer", "qualname": "Viewer.update_board", "type": "function", "doc": "<p>Update the board</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>new_board:</strong>  new board</li>\n</ul>\n", "parameters": ["self", "new_board"], "funcdef": "def"}, {"fullname": "tentohako.game.viewer.Viewer.update", "modulename": "tentohako.game.viewer", "qualname": "Viewer.update", "type": "function", "doc": "<p>Update the plotted figure</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>step:</strong>  the index of the current step</li>\n<li><strong>player_id:</strong>  the current active player</li>\n<li><strong>action_i:</strong>  y element of the chosen action</li>\n<li><strong>action_j:</strong>  x element of the chosen action</li>\n</ul>\n", "parameters": ["self", "step", "player_id", "action_i", "action_j"], "funcdef": "def"}, {"fullname": "tentohako.game.viewer.Viewer.save", "modulename": "tentohako.game.viewer", "qualname": "Viewer.save", "type": "function", "doc": "<p>Creae and save the gif filed which shows the history of the game</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>path:</strong>  the path to the created gif file</li>\n<li><strong>interval:</strong>  the interval time between each frames</li>\n<li><strong>repear_delay:</strong>  the delay time</li>\n</ul>\n", "parameters": ["self", "path", "interval", "repear_delay"], "funcdef": "def"}, {"fullname": "tentohako.gym", "modulename": "tentohako.gym", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.socket", "modulename": "tentohako.socket", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.socket.client", "modulename": "tentohako.socket.client", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.socket.client.Client", "modulename": "tentohako.socket.client", "qualname": "Client", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.socket.client.Client.__init__", "modulename": "tentohako.socket.client", "qualname": "Client.__init__", "type": "function", "doc": "<p>Class which represents the participant of the game.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>agent:</strong>  class which defines the agent.\nThis class should have member function <code>step</code>,\nwhich takes the instance of the Board class as an argument.</li>\n<li><strong>host_port:</strong>  port number of the host server.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>agent:</strong>  class which defines the agent.\nThis class should have member function <code>step</code>,\nwhich takes the instance of the Board class as an argument.</li>\n<li><strong>host_port:</strong>  port number of the host server.</li>\n<li><strong>sock:</strong>  socket which connects this client and the host server.</li>\n<li><strong>uid:</strong>  the id of the client.</li>\n</ul>\n", "parameters": ["self", "agent", "host_port"], "funcdef": "def"}, {"fullname": "tentohako.socket.client.Client.play", "modulename": "tentohako.socket.client", "qualname": "Client.play", "type": "function", "doc": "<p>Play the game</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "tentohako.socket.server", "modulename": "tentohako.socket.server", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "tentohako.socket.server.Server", "modulename": "tentohako.socket.server", "qualname": "Server", "type": "class", "doc": "<p></p>\n"}, {"fullname": "tentohako.socket.server.Server.__init__", "modulename": "tentohako.socket.server", "qualname": "Server.__init__", "type": "function", "doc": "<p>Class which represents the host server of the game.</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>port:</strong>  the port number of the host server.</li>\n<li><strong>ncol:</strong>  number of the columns of the board</li>\n<li><strong>nrow:</strong>  number of the row of the board</li>\n<li><strong>score_min:</strong>  the minimum score of the cell</li>\n<li><strong>score_max:</strong>  the mamimum score of the cell</li>\n<li><strong>num_player:</strong>  the total number of the participants in the game.\n(default = 2)</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>port:</strong>  the port number of the host server.</li>\n<li><strong>num_player:</strong>  the total number of the participants in the game.</li>\n<li><strong>sock:</strong>  socket of the host server.</li>\n<li><strong>board:</strong>  the instance of the Board class</li>\n<li><strong>user_ids:</strong>  list of user id</li>\n<li><strong>id_to_address:</strong>  dictionary whose keys are ids and values are\naddresses of the clients</li>\n<li><strong>id_to_clients:</strong>  dictionary whose keys are ids and values are\nthe socket obhect to the users</li>\n<li><strong>id_to_scores:</strong>  dictionary whose keys are ids and values are\nscores of the users</li>\n<li><strong>next_player:</strong>  the id of next player</li>\n<li><strong>step:</strong>  the current step number</li>\n</ul>\n", "parameters": ["self", "port", "ncol", "nrow", "num_player", "score_min", "score_max", "plot", "kwargs"], "funcdef": "def"}, {"fullname": "tentohako.socket.server.Server.set_clients", "modulename": "tentohako.socket.server", "qualname": "Server.set_clients", "type": "function", "doc": "<p>Register clients</p>\n", "parameters": ["self"], "funcdef": "def"}, {"fullname": "tentohako.socket.server.Server.play", "modulename": "tentohako.socket.server", "qualname": "Server.play", "type": "function", "doc": "<p>Play the game</p>\n\n<h6 id=\"args\">Args</h6>\n\n<ul>\n<li><strong>steps_limit:</strong>  the maximum number of steps (default = 1e5)</li>\n</ul>\n", "parameters": ["self", "steps_limit"], "funcdef": "def"}, {"fullname": "tentohako.socket.server.Server.save_plot", "modulename": "tentohako.socket.server", "qualname": "Server.save_plot", "type": "function", "doc": "<p></p>\n", "parameters": ["self", "path"], "funcdef": "def"}, {"fullname": "tentohako.socket.server.Server.close", "modulename": "tentohako.socket.server", "qualname": "Server.close", "type": "function", "doc": "<p></p>\n", "parameters": ["self"], "funcdef": "def"}]